'''
Обход графа в ширину (BFS) - это алгоритм поиска в графе, который 
обходит все вершины графа в порядке увеличения расстояния от начальной
вершины.

Описание алгоритма:
1. Создать очередь вершин и поместить в нее начальную вершину.
2. Пометить начальную вершину как посещенную.
3. Извлечь первую вершину из очереди и пройти все ее соседние вершины.
4. Если соседняя вершина не помечена как посещенная, то пометить ее 
и добавить в очередь.
5. Повторять пункты 3-4, пока очередь вершин не опустеет.

Примеры задач:
1. Поиск кратчайшего пути в невзвешенном графе.
2. Поиск компонент связности графа.
3. Поиск цикла в графе.
4. Поиск дерева кратчайших путей.

Временная сложность алгоритма BFS составляет O(V+E), где V - количество
вершин, E - количество ребер в графе.
'''

inc = {
1: [2, 8],
2: [1, 3, 8],
3: [2, 4, 8],
4: [3, 7, 9],
5: [6, 7],
6: [5],
7: [4, 5, 8],
8: [1, 2, 3, 7],
9: [4],
}

visited = set()
Q = []
BFS = []

def bfs(v):
    if v in visited:
        return
    visited.add(v)
    BFS.append(v)

    for i in inc[v]:
        if not i in visited:
            Q.append(i)
    while Q:
        bfs(Q.pop(0))

start = 1
bfs(start)
print(BFS)
